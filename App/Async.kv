<Graphics>
    canvas.before:
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'background.png'

    ToggleButton:
        size: dp(100), dp(100)
        pos: dp(20), dp(480)
        border: (0, 0, 0, 0)
        id: record
        on_press: app.nextEvent('ToggleRecord')
        background_normal: 'assets/RECORD.png'
        background_down: 'assets/RECORD2.png'

    GridLayout:
        cols: 8
        pos: dp(150), dp(490)
        size: dp(200), dp(100)
        Slider:
            id: s1
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s2
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s3
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s4
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s5
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s6
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s7
            orientation: 'vertical'
            min: 0
            max: 1
        Slider:
            id: s8
            orientation: 'vertical'
            min: 0
            max: 1

    GridLayout:
        cols: 8
        pos: dp(150), dp(430)
        size: dp(200), dp(100)
        Label:
            text: "a"
        Label:
            text: "b"
        Label:
            text: "c"
        Label:
            text: "d"
        Label:
            text: "e"
        Label:
            text: "f"
        Label:
            text: "g"
        Label:
            text: "h"

    Button:
        id: generate
        text: 'Generate'
        pos: dp(380),dp(480)
        size: dp(100), dp(100)
        on_press: lab.text = "Generating with values {},{},{},{},{},{},{},{}".format(round(s1.value,1),round(s2.value,1),round(s3.value,1),round(s4.value,1),round(s5.value,1),round(s6.value,1),round(s7.value,1),round(s8.value,1))

    Button:
        id: export
        text: 'Export'
        pos: dp(500),dp(480)
        size: dp(100), dp(100)
        on_press: lab.text = "Exporting"

    GridLayout:
        rows: 3
        pos: dp(620), dp(480)
        size: dp(160), dp(100)
        Spinner:
            text: 'Audio Input'
            values: [f"[{idx}]>" + indev["name"] for idx, indev in enumerate(app.devices["devices"]["input_list"])]
            on_text:
                print("The spinner {} has text {}".format(self, self.text))
                app.select_audio_device(self.text + "-->>input_device")
        Spinner:
            text: 'Audio Output'
            values: [f"[{idx}]>" + outdev["name"] for idx, outdev in enumerate(app.devices["devices"]["output_list"])]
            on_text:
                print("The spinner {} has text {}".format(self, self.text))
                app.select_audio_device(self.text + "-->>output_device")
        Spinner:
            text: 'Midi Input'
            values: ['A','B','C']
            on_text:
                print("The spinner {} has text {}".format(self, self.text))

    Label:
        id: lab
        pos: dp(350), dp(384)
        text: "Text goes here"
        color: .8,.8,.8,1
        font_size: 12

    Button:
        id: play
        text: 'play'
        pos: dp(20),dp(340)
        size: dp(100), dp(50)
        on_press:app.nextEvent('playSample')

    ToggleButton:
        id: loop
        text: 'loop'
        pos: dp(20),dp(290)
        size: dp(100), dp(50)
        on_press: print("Exporting")

    Image:
        source: ''
        pos: dp(150), dp(280)
        size: self.texture_size

    GridLayout:
        rows: 3
        pos:  dp(20), dp(170)
        size: dp(160), dp(100)
        spacing: [0, 5]

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker

    GridLayout:
        rows: 3
        pos:  dp(700), dp(170)
        size: dp(160), dp(100)
        spacing: [0, 5]

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker

        Knob:
            size: dp(80), dp(80)
            min: 0
            max: 100
            step: 1
            value: 0
            knobimg_source: "assets/knob_black.png"
            show_label: True  # Show central label
            show_marker: False  # Do not show surrounding marker